// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shared.Library.Entities;

#nullable disable

namespace SessionCoordinatorService.Migrations
{
    [DbContext(typeof(SupportDbContext))]
    [Migration("20231009185646_Initial_Migration")]
    partial class Initial_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shared.Library.Entities.ActiveAgentSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("ActiveAgentSessions");
                });

            modelBuilder.Entity("Shared.Library.Entities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeniorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SeniorityId");

                    b.HasIndex("TeamId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fe17fb6-7399-4298-a104-d33e340f1a48"),
                            Name = "Team_A_Team_Lead",
                            SeniorityId = new Guid("96db8f03-b7cf-4af9-b6e0-0202333780cb"),
                            TeamId = new Guid("17d9f599-7138-4ad2-b457-ad68906f906b")
                        },
                        new
                        {
                            Id = new Guid("7ca4bf18-d580-4e54-bf90-1bbb16c2adf2"),
                            Name = "Team_A_Mid_1",
                            SeniorityId = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            TeamId = new Guid("17d9f599-7138-4ad2-b457-ad68906f906b")
                        },
                        new
                        {
                            Id = new Guid("5478f83f-fc48-42f4-b926-cbcbd396aa53"),
                            Name = "Team_A_Mid_2",
                            SeniorityId = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            TeamId = new Guid("17d9f599-7138-4ad2-b457-ad68906f906b")
                        },
                        new
                        {
                            Id = new Guid("b2ce6332-bf5f-4438-9a82-6d579b18ee7f"),
                            Name = "Team_A_Junior",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("17d9f599-7138-4ad2-b457-ad68906f906b")
                        },
                        new
                        {
                            Id = new Guid("8377038d-dac7-4af3-aa7c-61d1e192e62f"),
                            Name = "Team_B_Senior",
                            SeniorityId = new Guid("53fcd7af-389e-4834-8de6-1bdffa1b551b"),
                            TeamId = new Guid("6c720849-0b8d-41c5-b052-9f032a06b31f")
                        },
                        new
                        {
                            Id = new Guid("2bb1219b-50eb-4eef-a2e1-8b1e093e12f8"),
                            Name = "Team_B_Mid",
                            SeniorityId = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            TeamId = new Guid("6c720849-0b8d-41c5-b052-9f032a06b31f")
                        },
                        new
                        {
                            Id = new Guid("bb558094-72ec-4baf-95ea-003044dbb918"),
                            Name = "Team_B_Junior_1",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("6c720849-0b8d-41c5-b052-9f032a06b31f")
                        },
                        new
                        {
                            Id = new Guid("8b9a71ba-b471-488d-bda1-f2a1e4381ad5"),
                            Name = "Team_B_Junior_2",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("6c720849-0b8d-41c5-b052-9f032a06b31f")
                        },
                        new
                        {
                            Id = new Guid("69685bc5-5023-4cea-bf0f-d577f761a73e"),
                            Name = "Team_C_Mid_1",
                            SeniorityId = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            TeamId = new Guid("a9f24a6a-1ed6-47a0-9dd8-2466bb9615c4")
                        },
                        new
                        {
                            Id = new Guid("fa7f8913-eea5-4771-8807-53040cbdba4a"),
                            Name = "Team_C_Mid_2",
                            SeniorityId = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            TeamId = new Guid("a9f24a6a-1ed6-47a0-9dd8-2466bb9615c4")
                        },
                        new
                        {
                            Id = new Guid("df88abf6-5f4c-4cd4-8231-3a3de13f8db0"),
                            Name = "Team_Overflow_Junior_1",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        },
                        new
                        {
                            Id = new Guid("65f76ec6-760f-4900-bd2c-6f0a3c33212e"),
                            Name = "Team_Overflow_Junior_2",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        },
                        new
                        {
                            Id = new Guid("7009e30a-4e33-40e7-89f7-9593ecae5039"),
                            Name = "Team_Overflow_Junior_3",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        },
                        new
                        {
                            Id = new Guid("8e75fdea-afec-48a1-8dc4-b98c73a8b620"),
                            Name = "Team_Overflow_Junior_4",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        },
                        new
                        {
                            Id = new Guid("4348f952-0699-452b-9df2-83e535df4e35"),
                            Name = "Team_Overflow_Junior_5",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        },
                        new
                        {
                            Id = new Guid("98bb9471-63cb-43c6-8020-cd76bd32a113"),
                            Name = "Team_Overflow_Junior_6",
                            SeniorityId = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            TeamId = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae")
                        });
                });

            modelBuilder.Entity("Shared.Library.Entities.AgentSeniority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("SeniorityMultiplier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seniority");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec61b203-e958-42fd-97de-8f1e06b12cf5"),
                            Name = "Junior",
                            Priority = 1,
                            SeniorityMultiplier = 4
                        },
                        new
                        {
                            Id = new Guid("442a62f5-531a-474e-8ab1-fd2bf4c132a5"),
                            Name = "Mid-Level",
                            Priority = 2,
                            SeniorityMultiplier = 6
                        },
                        new
                        {
                            Id = new Guid("53fcd7af-389e-4834-8de6-1bdffa1b551b"),
                            Name = "Senior",
                            Priority = 3,
                            SeniorityMultiplier = 8
                        },
                        new
                        {
                            Id = new Guid("96db8f03-b7cf-4af9-b6e0-0202333780cb"),
                            Name = "Team Lead",
                            Priority = 4,
                            SeniorityMultiplier = 5
                        });
                });

            modelBuilder.Entity("Shared.Library.Entities.SessionMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SentBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("SessionChats");
                });

            modelBuilder.Entity("Shared.Library.Entities.SessionQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SessionQueue");
                });

            modelBuilder.Entity("Shared.Library.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("WorkFinishHourAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStartHourAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17d9f599-7138-4ad2-b457-ad68906f906b"),
                            Active = true,
                            Name = "A",
                            WorkFinishHourAt = new DateTime(1, 1, 1, 18, 1, 1, 0, DateTimeKind.Unspecified),
                            WorkStartHourAt = new DateTime(1, 1, 1, 10, 1, 1, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6c720849-0b8d-41c5-b052-9f032a06b31f"),
                            Active = true,
                            Name = "B",
                            WorkFinishHourAt = new DateTime(1, 1, 2, 2, 1, 1, 0, DateTimeKind.Unspecified),
                            WorkStartHourAt = new DateTime(1, 1, 1, 18, 1, 1, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a9f24a6a-1ed6-47a0-9dd8-2466bb9615c4"),
                            Active = true,
                            Name = "C",
                            WorkFinishHourAt = new DateTime(1, 1, 1, 10, 1, 1, 0, DateTimeKind.Unspecified),
                            WorkStartHourAt = new DateTime(1, 1, 1, 2, 1, 1, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a73c6968-5ae6-452b-8ab6-540e3b60bfae"),
                            Active = false,
                            Name = "Overflow",
                            WorkFinishHourAt = new DateTime(1, 1, 1, 18, 1, 1, 0, DateTimeKind.Unspecified),
                            WorkStartHourAt = new DateTime(1, 1, 1, 10, 1, 1, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Shared.Library.Entities.ActiveAgentSession", b =>
                {
                    b.HasOne("Shared.Library.Entities.Agent", "Agent")
                        .WithMany("ActiveAgentSessions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Shared.Library.Entities.Agent", b =>
                {
                    b.HasOne("Shared.Library.Entities.AgentSeniority", "Seniority")
                        .WithMany("Agents")
                        .HasForeignKey("SeniorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shared.Library.Entities.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seniority");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Shared.Library.Entities.SessionMessage", b =>
                {
                    b.HasOne("Shared.Library.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("Shared.Library.Entities.Agent", b =>
                {
                    b.Navigation("ActiveAgentSessions");
                });

            modelBuilder.Entity("Shared.Library.Entities.AgentSeniority", b =>
                {
                    b.Navigation("Agents");
                });

            modelBuilder.Entity("Shared.Library.Entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
