// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SessionCoordinatorService.Entities;

#nullable disable

namespace SessionCoordinatorService.Migrations
{
    [DbContext(typeof(SupportDbContext))]
    [Migration("20231009104944_Add_SessionQueue_Table_Unique_SessionId_ActiveAgentSession")]
    partial class Add_SessionQueue_Table_Unique_SessionId_ActiveAgentSession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SessionCoordinatorService.Entities.ActiveAgentSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("SessionId")
                        .IsUnique();

                    b.ToTable("ActiveAgentSessions");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeniorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SeniorityId");

                    b.HasIndex("TeamId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c07e23e-2170-4917-b0d7-289aedbc2655"),
                            Name = "Team_A_Team_Lead",
                            SeniorityId = new Guid("84392792-84f3-4cac-a551-85dbc7fde1bc"),
                            TeamId = new Guid("78caa9cf-8cee-483d-a5e1-870cf6d45769")
                        },
                        new
                        {
                            Id = new Guid("0379fba9-efc3-4035-a1d1-5619a3fe0ac7"),
                            Name = "Team_A_Mid_1",
                            SeniorityId = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            TeamId = new Guid("78caa9cf-8cee-483d-a5e1-870cf6d45769")
                        },
                        new
                        {
                            Id = new Guid("869b4af1-af1e-48d5-8e86-f10a00894337"),
                            Name = "Team_A_Mid_2",
                            SeniorityId = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            TeamId = new Guid("78caa9cf-8cee-483d-a5e1-870cf6d45769")
                        },
                        new
                        {
                            Id = new Guid("640e3839-c013-4d3c-b3bc-35df63f80656"),
                            Name = "Team_A_Junior",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("78caa9cf-8cee-483d-a5e1-870cf6d45769")
                        },
                        new
                        {
                            Id = new Guid("b19355b4-4581-4a10-93a4-567b0c136071"),
                            Name = "Team_B_Senior",
                            SeniorityId = new Guid("ffe91256-3a1a-4a1e-a5b2-cdbbf4848e14"),
                            TeamId = new Guid("28264979-69cc-4414-9d8f-cf1360ebe471")
                        },
                        new
                        {
                            Id = new Guid("50170ebd-b209-4ae4-bbad-a910d1f4dcde"),
                            Name = "Team_B_Mid",
                            SeniorityId = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            TeamId = new Guid("28264979-69cc-4414-9d8f-cf1360ebe471")
                        },
                        new
                        {
                            Id = new Guid("67c4d886-35c1-4ec6-934b-b65e2191a47a"),
                            Name = "Team_B_Junior_1",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("28264979-69cc-4414-9d8f-cf1360ebe471")
                        },
                        new
                        {
                            Id = new Guid("49421c5d-df31-40a2-a9c6-896b8aae937f"),
                            Name = "Team_B_Junior_2",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("28264979-69cc-4414-9d8f-cf1360ebe471")
                        },
                        new
                        {
                            Id = new Guid("b96dd648-2835-43b9-8c19-9d5aecd6acec"),
                            Name = "Team_C_Mid_1",
                            SeniorityId = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            TeamId = new Guid("13cbf644-e1ae-4106-b480-c5a9ac5c8320")
                        },
                        new
                        {
                            Id = new Guid("278020aa-6b9b-4b35-8ed3-8ffdefde508d"),
                            Name = "Team_C_Mid_2",
                            SeniorityId = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            TeamId = new Guid("13cbf644-e1ae-4106-b480-c5a9ac5c8320")
                        },
                        new
                        {
                            Id = new Guid("02d30124-ede3-48f5-97cb-203c8a370ce8"),
                            Name = "Team_Overflow_Junior_1",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        },
                        new
                        {
                            Id = new Guid("ea5257d4-62e1-4fd5-b5e8-778d6e0013fc"),
                            Name = "Team_Overflow_Junior_2",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        },
                        new
                        {
                            Id = new Guid("8c5d7430-da66-4afe-bab9-ffe3399ab594"),
                            Name = "Team_Overflow_Junior_3",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        },
                        new
                        {
                            Id = new Guid("0e308e43-49ba-4bf3-a9a4-22c9a395c4fa"),
                            Name = "Team_Overflow_Junior_4",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        },
                        new
                        {
                            Id = new Guid("55799113-9116-4009-8897-c6a41fb743de"),
                            Name = "Team_Overflow_Junior_5",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        },
                        new
                        {
                            Id = new Guid("f633e091-efb0-4a99-b529-4eb511d35dfe"),
                            Name = "Team_Overflow_Junior_6",
                            SeniorityId = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            TeamId = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4")
                        });
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.AgentSeniority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("SeniorityMultiplier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seniority");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50112afc-d878-444d-abaf-34632427debd"),
                            Name = "Junior",
                            Priority = 1,
                            SeniorityMultiplier = 4
                        },
                        new
                        {
                            Id = new Guid("825c8c5e-c290-4603-b973-d2f8b2e6d533"),
                            Name = "Mid-Level",
                            Priority = 2,
                            SeniorityMultiplier = 6
                        },
                        new
                        {
                            Id = new Guid("ffe91256-3a1a-4a1e-a5b2-cdbbf4848e14"),
                            Name = "Senior",
                            Priority = 3,
                            SeniorityMultiplier = 8
                        },
                        new
                        {
                            Id = new Guid("84392792-84f3-4cac-a551-85dbc7fde1bc"),
                            Name = "Team Lead",
                            Priority = 4,
                            SeniorityMultiplier = 5
                        });
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.SessionMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SentBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.ToTable("SessionChats");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.SessionQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SessionQueue");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkFinishHourAt")
                        .HasColumnType("int");

                    b.Property<int>("WorkStartHourAt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78caa9cf-8cee-483d-a5e1-870cf6d45769"),
                            Active = true,
                            Name = "A",
                            WorkFinishHourAt = 18,
                            WorkStartHourAt = 10
                        },
                        new
                        {
                            Id = new Guid("28264979-69cc-4414-9d8f-cf1360ebe471"),
                            Active = true,
                            Name = "B",
                            WorkFinishHourAt = 2,
                            WorkStartHourAt = 18
                        },
                        new
                        {
                            Id = new Guid("13cbf644-e1ae-4106-b480-c5a9ac5c8320"),
                            Active = true,
                            Name = "C",
                            WorkFinishHourAt = 10,
                            WorkStartHourAt = 2
                        },
                        new
                        {
                            Id = new Guid("768e2812-8644-4be4-8ce6-8203d79231f4"),
                            Active = false,
                            Name = "Overflow",
                            WorkFinishHourAt = 18,
                            WorkStartHourAt = 10
                        });
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.ActiveAgentSession", b =>
                {
                    b.HasOne("SessionCoordinatorService.Entities.Agent", "Agent")
                        .WithMany("ActiveAgentSessions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.Agent", b =>
                {
                    b.HasOne("SessionCoordinatorService.Entities.AgentSeniority", "Seniority")
                        .WithMany("Agents")
                        .HasForeignKey("SeniorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SessionCoordinatorService.Entities.Team", "Team")
                        .WithMany("Agents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seniority");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.SessionMessage", b =>
                {
                    b.HasOne("SessionCoordinatorService.Entities.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.Agent", b =>
                {
                    b.Navigation("ActiveAgentSessions");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.AgentSeniority", b =>
                {
                    b.Navigation("Agents");
                });

            modelBuilder.Entity("SessionCoordinatorService.Entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
